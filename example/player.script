go.property("max_camera_offset", vmath.vector3(300, 500, 0))
go.property("camera_offset_lerp", 0.05)

local camera = require "orthographic.camera"

local SPEED = 400

local CAMERA_ID = hash("/camera")

function init(self)
	self.input = {}
	self.crosshair = vmath.vector3()
	self.camera_offset = vmath.vector3()
end

function update(self, dt)
	-- update crosshair based on mouse and camera position
	local cursor_pos = camera.screen_to_world(CAMERA_ID, self.crosshair)
	cursor_pos = vmath.lerp(0.5, go.get_position("crosshair"), cursor_pos)
	go.set_position(cursor_pos, "crosshair")
	label.set_text("crosshair#position", ("%.2f x %.2f"):format(cursor_pos.x, cursor_pos.y))

	-- rotate towards cursor
	local player_world = go.get_world_position()
	local angle = math.atan2(player_world.x - cursor_pos.x, cursor_pos.y - player_world.y)
	local rotation = vmath.quat_rotation_z(angle)
	go.set_rotation(rotation)
	
	-- update player position
	local pos = go.get_position()
	if self.input[hash("up")] then
		pos.y = pos.y + SPEED * dt
		self.camera_offset.y = vmath.lerp(self.camera_offset_lerp, self.camera_offset.y, self.max_camera_offset.x)
	elseif self.input[hash("down")] then
		pos.y = pos.y - SPEED * dt
		self.camera_offset.y = vmath.lerp(self.camera_offset_lerp, self.camera_offset.y, -self.max_camera_offset.x)
	end
	if self.input[hash("left")] then
		pos.x = pos.x - SPEED * dt
		self.camera_offset.x = vmath.lerp(self.camera_offset_lerp, self.camera_offset.x, -self.max_camera_offset.y)
	elseif self.input[hash("right")] then
		pos.x = pos.x + SPEED * dt
		self.camera_offset.x = vmath.lerp(self.camera_offset_lerp, self.camera_offset.x, self.max_camera_offset.y)
	end

	msg.post("controls", "camera_offset", { offset = self.camera_offset})
	go.set_position(pos)
end

function on_input(self, action_id, action)
	self.crosshair.x = action.x
	self.crosshair.y = action.y
	
	if action_id then
		if action.pressed then
			self.input[action_id] = true
		elseif action.released then
			self.input[action_id] = false
		end

		-- shoot and apply recoil
		if action_id == hash("touch") and action.released then
			local crosshair_pos = go.get_position("crosshair")
			local player_pos = go.get_position()
			local offset = (crosshair_pos - player_pos) * 0.1
			camera.recoil(CAMERA_ID, offset, 0.5)
		end
	end
end
